${
    Template(Settings settings)
    {
        settings
            .IncludeCurrentProject();
        settings.OutputExtension = ".ts";
    }
	bool HasBaseClass(Class c)
    {
        return c.BaseClass != null;
    }
	bool HasNotBaseClass(Class c)
    {
        return c.BaseClass == null;
    }
}/* This class definitions are generated by Typewriter. Don't try to change it. 
//use this definition in order not to inherit classes:
//$Classes(FRI3NDS.Angular4Template.Web.Models.ViewModels*)[
//export class $Name { $HasBaseClass[
// Inherited properties$BaseClass[$Properties[
//    public $name: $Type;]]]$Properties[
//    public $name: $Type;]
//}]*/$Classes(FRI3NDS.Angular4Template.Web.Models.ViewModels*)[
$HasNotBaseClass[
export class $Name {
public constructor(init?: Partial<$Name>) {
        Object.assign(this, init);
    }$Properties[
    public $name: $Type;]
}]]
$Classes(FRI3NDS.Angular4Template.Web.Models.ViewModels*)[
$HasBaseClass[
export class $Name extends $BaseClass {
public constructor(init?: Partial<$Name>) {
        super(init);
        Object.assign(this, init);
    }$Properties[
    public $name: $Type;]
}]]